{"version":3,"sources":["hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["mapStateWithAuthProps","state","isAuth","auth","DialogsContainer","compose","connect","dialogs","dialogsPage","messages","addMessage","Component","props","to","Dialogs"],"mappings":"4JAKIA,EAAwB,SAACC,GACzB,MAAO,CACLC,OAAQD,EAAME,KAAKD,S,iBCanBE,EAAmBC,YACvBC,aAVkB,SAACL,GAEnB,MAAO,CACLM,QAASN,EAAMO,YAAYD,QAC3BE,SAAUR,EAAMO,YAAYC,YAMP,CAACC,kBDVI,SAACC,GAO3B,OAAQL,YAAQN,EAARM,EALkB,SAACM,GACvB,OAAKA,EAAMV,OACJ,cAACS,EAAD,eAAeC,IADI,cAAC,IAAD,CAAUC,GAAI,gBCMvBR,CAELS,KAELV","file":"static/js/3.1c0e873a.chunk.js","sourcesContent":["import { connect } from \"react-redux\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { StateDataType } from \"../redux/store\"\r\n\r\n\r\nlet mapStateWithAuthProps = (state:StateDataType) => {\r\n    return {\r\n      isAuth: state.auth.isAuth\r\n    }\r\n  }\r\n\r\nexport let withAuthRedirect = (Component:any) => {\r\n\r\n    let wiathAuthContainer  = (props:any)=> {\r\n        if (!props.isAuth) return <Redirect to={'/login'}/>\r\n        return <Component {...props}/>\r\n      }\r\n\r\n    return  connect(mapStateWithAuthProps)(wiathAuthContainer);\r\n}","import React from 'react'\r\nimport { connect, ConnectedComponent } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { addMessage } from '../../redux/dialogs-reducer'\r\nimport { ActionType, StateDataType } from '../../redux/store'\r\nimport Dialogs from './Dialogs'\r\n\r\n\r\n\r\nlet mapStateProps = (state:StateDataType) => {\r\n\r\n  return {\r\n    dialogs: state.dialogsPage.dialogs,\r\n    messages: state.dialogsPage.messages,\r\n  }\r\n}\r\n\r\n\r\nconst DialogsContainer = compose<ConnectedComponent<(props: any) => JSX.Element, Omit<any, \"isAuth\" | \"dispatch\">>>(\r\n  connect (mapStateProps,{addMessage}),\r\n  withAuthRedirect)(Dialogs);\r\n\r\nexport default DialogsContainer;"],"sourceRoot":""}